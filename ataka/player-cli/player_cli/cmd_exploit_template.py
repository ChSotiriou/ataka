import os
import re
import typer
from zipfile import ZipFile

from player_cli.cmd_exploit import app
from player_cli.util import make_executable, ERROR_STR, WARN_STR
from player_cli import self_as_zip_path


@app.command("template", help="Generate an exploit stub from a template.")
def exploit_template(
        template: str = typer.Argument(
            ...,
            help="Template to use, one of: python, ubuntu. "
                 "Optionally, you can specify a Docker tag (e.g., python:3.9-slim). "
                 "If none is specified, the latest will be used.",
        ),
        path: str = typer.Argument(..., help="Destination directory."),
        overwrite: bool = typer.Option(
            False,
            "--overwrite",
            help="Proceed even if the destination directory already exists.",
        ),
):
    if template.count(":") > 1:
        raise typer.BadParameter("Can't give more than one tag", param_hint="TEMPLATE")

    with ZipFile(self_as_zip_path, "r") as archive:
        templates = [info.filename.split("/")[1] for info in archive.infolist()
                     if info.is_dir() and info.filename.count("/") == 2 and info.filename.startswith("templates/")]
        template, tag = template.split(":") if ":" in template else (template, "latest")

        if template not in templates:
            raise typer.BadParameter(f'unknown template {template}', param_hint="TEMPLATE")

        for info in [x for x in archive.infolist() if x.filename.startswith(f"templates/{template}/")]:
            out_filename = os.path.join(path, info.filename[len(f"templates/{template}/"):])
            if info.is_dir():
                try:
                    os.mkdir(out_filename)
                except FileExistsError:
                    if overwrite:
                        typer.echo(
                            f'{WARN_STR}: directory "{out_filename}" already exists (proceeding anyway)'
                        )
                    else:
                        typer.echo(
                            f'{ERROR_STR}: directory "{out_filename}" already exists (use --overwrite to proceed anyway)'
                        )
                        raise typer.Exit(code=1)
            else:
                with open(out_filename, "wb") as outfile:
                    with archive.open(info.filename) as infile:
                        contents = infile.read()

                        if info.filename == f"templates/{template}/Dockerfile":
                            contents = re.sub(b"^FROM (.*):.*$", f"FROM \\1:{tag}".encode(), contents,
                                              flags=re.MULTILINE)

                        outfile.write(contents)
                # if file is executable
                if (info.external_attr >> 16) & 0o111 > 0:
                    make_executable(out_filename)
